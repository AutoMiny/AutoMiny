<launch>
	<arg name="live"            doc="Whether to instantiate a live system (true) or a bag-based one (false)" />
	<arg name="use_nodelets"    default="$(optenv USE_NODELETS true)" />
	<arg name="nodelet_manager" default="$(optenv LOCALIZATION_NODELET_MANAGER core_nodelet_manager)" />

	<rosparam command="load" file="$(find autominy)/params/ekf_localization.yaml" />
	<remap from="odometry/wheel"     to="/sensors/odometry/odom" />
	<remap from="odometry/gps"       to="/sensors/road_marking_localization/corrected_odom" />
	<remap from="imu/data"           to="/sensors/arduino/imu" />

	<group unless="$(arg use_nodelets)">
		<node
				pkg="robot_localization"
				name="ekf_se_map"
				type="ekf_localization_node"
				clear_params="true"
				output="screen"
		>
			<remap from="odometry/filtered"  to="localization/filtered_map"/>
		</node>
	</group>

	<!-- ========================== use nodelets ========================== -->
	<group if ="$(arg use_nodelets)">
		<node
				pkg="nodelet"
				type="nodelet"
				name="ekf_se_map"
				clear_params="true"
				output="screen"
				args="load RobotLocalization/EkfNodelet $(arg nodelet_manager)"
		>
			<remap from="odometry/filtered"  to="localization/filtered_map"/>
		</node>
	</group>

    <arg name="gps_id" value="$(optenv ROS_GPS_MARKER 999)" />
    <remap from="gps" to="/communication/gps/$(arg gps_id)" />
	<remap from="localization" to="/sensors/localization/filtered_map" />
	<include file="$(find road_marking_localization)/launch/Initialpose.launch">
		<arg name="gps_id" value="$(arg gps_id)" />
	</include>

</launch>
