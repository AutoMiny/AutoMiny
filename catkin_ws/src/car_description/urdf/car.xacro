<?xml version="1.0"?>
<robot name="$(arg car_name)" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:include filename="$(find car_description)/urdf/_d435.urdf.xacro"/>
    <xacro:include filename="$(find car_description)/urdf/rplidar_a2.xacro"/>
    <xacro:include filename="$(find car_description)/urdf/common.xacro"/>
    <xacro:arg name="tf_prefix" default=""/>
    <xacro:arg name="agent_prefix" default=""/>

    <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
    </material>

    <material name="plastic">
        <color rgba="1 1 1 0.25"/>
    </material>

    <material name="imu">
        <color rgba="0.2 0.5 0.1 1"/>
    </material>

    <material name="grey">
        <color rgba="0.75 0.75 0.75 1"/>
    </material>

    <material name="white">
        <color rgba="0.95 0.95 0.95 1"/>
    </material>

    <link name="$(arg tf_prefix)base_link">
        <visual>
            <origin rpy="0.0 0 0" xyz="0.135 0 0.01"/>
            <geometry>
                <mesh filename="file://$(find car_description)/meshes/chasi.dae"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin rpy="0.0 0 0" xyz="0.135 0 0.01"/>
            <geometry>
                <mesh filename="file://$(find car_description)/meshes/chasi.dae"/>
            </geometry>
        </collision>
        <xacro:box_inertial_with_origin mass="30.0" x="0.2" y="0.1" z="0.05">
            <origin rpy="0.0 0 0" xyz="0.115 0 0.0"/>
        </xacro:box_inertial_with_origin>
    </link>

    <link name="$(arg tf_prefix)board">
        <visual>
            <origin rpy="0.0 0 0" xyz="0.115 0 0"/>
            <geometry>
                <mesh filename="file://$(find car_description)/meshes/board.dae"/>
            </geometry>
            <material name="plastic"/>
        </visual>
        <collision>
            <origin rpy="0.0 0 0" xyz="0.115 0 0"/>
            <geometry>
                <mesh filename="file://$(find car_description)/meshes/board.dae"/>
            </geometry>
        </collision>
        <xacro:box_inertial_with_origin x="0.3" y="0.1" z="0.1" mass="0.3">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:box_inertial_with_origin>
    </link>

    <link name="$(arg tf_prefix)camera_board">
        <visual>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find car_description)/meshes/camera_board.dae"/>
            </geometry>
            <material name="plastic"/>
        </visual>
        <collision>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find car_description)/meshes/camera_board.dae"/>
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <mass value="0.1"/>
            <inertia ixx="0.00014165" ixy="0.0" ixz="0.0" iyy="0.00006758" iyz="0.0" izz="0.00020865"/>
        </inertial>
    </link>

    <xacro:macro name="wheel" params="name">
        <link name="${name}">
            <visual>
                <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
                <geometry>
                    <mesh filename="file://$(find car_description)/meshes/wheel.dae"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="0.025" radius="0.0325"/>
                </geometry>
            </collision>
            <xacro:cylinder_inertial_with_origin radius="0.025" length="0.0325" mass="0.1">
                <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            </xacro:cylinder_inertial_with_origin>
        </link>

        <gazebo reference="${name}">
            <mu1>0.9</mu1>
            <mu2>0.9</mu2>
            <kp>1000000.0</kp> <!--contact stiffness-->
            <kd>1.0</kd> <!--damping-->
            <minDepth>0.001</minDepth>
        </gazebo>

    </xacro:macro>

    <xacro:wheel name="$(arg tf_prefix)wheel_fr"/>
    <xacro:wheel name="$(arg tf_prefix)wheel_fl"/>
    <xacro:wheel name="$(arg tf_prefix)wheel_br"/>
    <xacro:wheel name="$(arg tf_prefix)wheel_bl"/>

    <link name="$(arg tf_prefix)axis_fl">
        <visual>
            <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <box size="0 0 0"/>
            </geometry>
        </collision>
        <xacro:sphere_inertial radius="0.02" mass="0.15"/>
    </link>

    <link name="$(arg tf_prefix)axis_fr">
        <visual>
            <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
            <geometry>
                <box size="0 0 0"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
        </collision>
        <xacro:sphere_inertial radius="0.02" mass="0.15"/>
    </link>

    <link name="$(arg tf_prefix)imu">
        <visual>
            <geometry>
                <box size="0.066 0.064 0.01"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="imu"/>
        </visual>
        <collision>
            <geometry>
                <box size="0.066 0.064 0.01"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.2"/>
            <inertia ixx="0.00006993" ixy="0.0" ixz="0.0" iyy="0.00007427" iyz="0.0" izz="0.00014087"/>
        </inertial>
    </link>

    <link name="$(arg tf_prefix)marker">
        <visual>
            <geometry>
                <mesh filename="file://$(find car_description)/meshes/marker.dae"/>
            </geometry>
            <origin rpy="0 0 1.5708" xyz="0 0 0"/>

        </visual>
        <collision>
            <geometry>
                <box size="0.03 0.03 0.000001"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.001"/>
            <inertia ixx="0.00000008" ixy="0.0" ixz="0.0" iyy="0.00000008" iyz="0.0" izz="0.00000015"/>
        </inertial>
    </link>

    <link name="$(arg tf_prefix)support_l">
        <visual>
            <geometry>
                <cylinder length="0.22" radius="0.004"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.22" radius="0.004"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.001"/>
            <inertia ixx="0.00000404" ixy="0.0" ixz="0.0" iyy="0.00000404" iyz="0.0" izz="0.00000001"/>
        </inertial>
    </link>

    <link name="$(arg tf_prefix)support_r">
        <visual>
            <geometry>
                <cylinder length="0.22" radius="0.004"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.22" radius="0.004"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.001"/>
            <inertia ixx="0.00000404" ixy="0.0" ixz="0.0" iyy="0.00000404" iyz="0.0" izz="0.00000001"/>
        </inertial>
    </link>

    <!-- BNO055 -->
    <link name="$(arg tf_prefix)bno055">
    </link>

    <link name="$(arg tf_prefix)nuc">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0.022"/>
            <geometry>
                <box size="0.11 0.11 0.04"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0.022"/>
            <geometry>
                <box size="0.11 0.11 0.04"/>
            </geometry>
        </collision>

        <xacro:box_inertial_with_origin x="0.11" y="0.11" z="0.04" mass="0.7">
            <origin xyz="0 0 0.025" rpy="0 0 0"/>
        </xacro:box_inertial_with_origin>
    </link>


    <!-- front camera -->
    <xacro:property name="front_camera_name" value="camera"/>

    <xacro:sensor_d435 parent="$(arg tf_prefix)camera_board" sensor_name="$(arg tf_prefix)camera">
        <origin xyz="0.03 0 0.025" rpy="0 0.2 0"/>
    </xacro:sensor_d435>

    <xacro:sensor_d435 parent="$(arg tf_prefix)camera_board" sensor_name="rear_camera">
        <origin xyz="-0.02 0 0.025" rpy="0 0.2 3.141"/>
    </xacro:sensor_d435>

    <xacro:sensor_rplidar_a2 parent="$(arg tf_prefix)board" prefix="lidar" tf_prefix="$(arg tf_prefix)">
        <origin xyz="0.14 0 0.0425" rpy="0 0 0"/>
    </xacro:sensor_rplidar_a2>

    <joint name="$(arg tf_prefix)joint_board_to_bno055" type="fixed">
        <parent link="$(arg tf_prefix)board"/>
        <child link="$(arg tf_prefix)bno055"/>
        <origin xyz="0.235 0.0 0.023" rpy="0 0 1.5708"/>
    </joint>

    <joint name="$(arg tf_prefix)base_link_board" type="fixed">
        <parent link="$(arg tf_prefix)base_link"/>
        <child link="$(arg tf_prefix)board"/>
        <origin xyz="0 0 0.07"/>
    </joint>

    <joint name="$(arg tf_prefix)board_cameraboard" type="fixed">
        <parent link="$(arg tf_prefix)board"/>
        <child link="$(arg tf_prefix)camera_board"/>
        <origin xyz="-0.025 0 0.15"/>
    </joint>

    <joint name="$(arg tf_prefix)board_imu" type="fixed">
        <parent link="$(arg tf_prefix)board"/>
        <child link="$(arg tf_prefix)imu"/>
        <origin xyz="0.07 -0.017 0"/>
    </joint>

    <joint name="$(arg tf_prefix)board_marker" type="fixed">
        <parent link="$(arg tf_prefix)board"/>
        <child link="$(arg tf_prefix)marker"/>
        <origin xyz="0.30 0.0 0.0025"/>
    </joint>

    <joint name="$(arg tf_prefix)board_nuc" type="fixed">
        <parent link="$(arg tf_prefix)board"/>
        <child link="$(arg tf_prefix)nuc"/>
        <origin xyz="0.16 0 0"/>
    </joint>

    <joint name="$(arg tf_prefix)frontwheel_steering_left" type="revolute">
        <axis xyz="0 0 1"/>
        <limit effort="0.001" lower="-0.60" upper="0.60" velocity="1.0"/>
        <parent link="$(arg tf_prefix)base_link"/>
        <child link="$(arg tf_prefix)axis_fl"/>
        <origin xyz="0.255 0.08 0.03" rpy="0.0 0.0 0.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <joint name="$(arg tf_prefix)frontwheel_steering_right" type="revolute">
        <axis xyz="0 0 1"/>
        <limit effort="0.001" lower="-0.60" upper="0.60" velocity="1.0"/>
        <parent link="$(arg tf_prefix)base_link"/>
        <child link="$(arg tf_prefix)axis_fr"/>
        <origin xyz="0.255 -0.08 0.03" rpy="0.0 0.0 0.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <joint name="$(arg tf_prefix)frontwheel_left" type="continuous">
        <axis xyz="0 1 0"/>
        <parent link="$(arg tf_prefix)axis_fl"/>
        <child link="$(arg tf_prefix)wheel_fl"/>
        <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
        <limit effort="100.0" velocity="500.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <joint name="$(arg tf_prefix)frontwheel_right" type="continuous">
        <axis xyz="0 1 0"/>
        <parent link="$(arg tf_prefix)axis_fr"/>
        <child link="$(arg tf_prefix)wheel_fr"/>
        <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
        <limit effort="100.0" velocity="500.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <joint name="$(arg tf_prefix)rearwheel_left" type="continuous">
        <axis xyz="0 1 0"/>
        <parent link="$(arg tf_prefix)base_link"/>
        <child link="$(arg tf_prefix)wheel_bl"/>
        <origin xyz="0 0.085 0.03" rpy="0.0 0.0 0.0"/>
        <limit effort="100.0" velocity="500.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <joint name="$(arg tf_prefix)rearwheel_right" type="continuous">
        <axis xyz="0 1 0"/>
        <parent link="$(arg tf_prefix)base_link"/>
        <child link="$(arg tf_prefix)wheel_br"/>
        <origin xyz="0 -0.085 0.03" rpy="0.0 0.0 0.0"/>
        <limit effort="100.0" velocity="500.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <joint name="$(arg tf_prefix)board_support_l" type="fixed">
        <parent link="$(arg tf_prefix)board"/>
        <child link="$(arg tf_prefix)support_l"/>
        <origin xyz="-0.024000 0.053000 0.112000"/>
    </joint>

    <joint name="$(arg tf_prefix)board_support_r" type="fixed">
        <parent link="$(arg tf_prefix)board"/>
        <child link="$(arg tf_prefix)support_r"/>
        <origin xyz="-0.024000 -0.053000 0.112000"/>
    </joint>

    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
        <joint name="$(arg tf_prefix)rearwheel_left">
            <command_interface name="velocity"/>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>

        <joint name="$(arg tf_prefix)rearwheel_right">
            <command_interface name="velocity"/>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>

        <joint name="$(arg tf_prefix)frontwheel_left">
            <command_interface name="velocity"/>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="$(arg tf_prefix)frontwheel_right">
            <command_interface name="velocity"/>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>

        <joint name="$(arg tf_prefix)frontwheel_steering_left">
            <command_interface name="position">
                <param name="min">-0.60</param>
                <param name="max">0.60</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="$(arg tf_prefix)frontwheel_steering_right">
            <command_interface name="position">
                <param name="min">-0.60</param>
                <param name="max">0.60</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>

    </ros2_control>

    <gazebo reference="$(arg tf_prefix)rearwheel_left">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="$(arg tf_prefix)rearwheel_right">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="$(arg tf_prefix)frontwheel_right">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="$(arg tf_prefix)frontwheel_left">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="$(arg tf_prefix)frontwheel_steering_right">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="$(arg tf_prefix)frontwheel_steering_left">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>

    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
            <parameters>$(find sim_car_controller)/config/control.yaml</parameters>
        </plugin>
    </gazebo>

    <gazebo>
        <plugin name="model_car_ground_truth" filename="libgazebo_ros_p3d.so">
            <ros>
                <namespace>p3d</namespace>
                <remapping>odom:=/simulation/odom_ground_truth</remapping>
            </ros>
            <frame_name>map</frame_name>
            <body_name>$(arg tf_prefix)base_link</body_name>
            <update_rate>30.0</update_rate>
        </plugin>
    </gazebo>

    <gazebo reference="$(arg tf_prefix)imu">
        <sensor name="$(arg tf_prefix)imu" type="imu">
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <ros>
                    <namespace>sensors</namespace>
                    <remapping>~/out:=imu</remapping>
                </ros>
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
            </plugin>
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
        </sensor>
    </gazebo>


    <gazebo reference="$(arg tf_prefix)camera_depth_frame">
        <sensor type="depth" name="camera1">
            <always_on>1</always_on>
            <visualize>true</visualize>
            <update_rate>15.0</update_rate>
            <camera>
                <pose>0 0 0 0 0.20 0</pose>
                <horizontal_fov>1.3900031938640904</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>L8</format>
                </image>
                <depth_camera>
                </depth_camera>
                <clip>
                    <near>0.01</near>
                    <far>50.0</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="depth" filename="libgazebo_ros_camera.so">
                <ros>
                    <namespace>/sensors</namespace>
                    <remapping>camera/image_raw:=camera/infra1/image_rect_raw</remapping>
                    <remapping>camera/camera_info:=camera/infra1/camera_info</remapping>
                    <remapping>camera/depth/image_raw:=camera/depth/image_rect_raw</remapping>
                    <remapping>camera/depth/camera_info:=camera/depth/camera_info</remapping>
                    <remapping>camera/points:=camera/depth/points</remapping>
                </ros>

                <always_on>true</always_on>
                <update_rate>15.0</update_rate>
                <camera_name>camera</camera_name>
                <frame_name>$(arg tf_prefix)camera_depth_optical_frame</frame_name>

                <pointCloudCutoff>0.05</pointCloudCutoff>
                <pointCloudCutoffMax>15.0</pointCloudCutoffMax>
                <hack_baseline>0.007</hack_baseline>
                <CxPrime>322.3056945800781</CxPrime>
                <Cx>322.3056945800781</Cx>
                <Cy>241.67051696777344</Cy>
                <focal_length>383.795710</focal_length>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.0</stddev>
                </noise>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="$(arg tf_prefix)camera_color_frame">
        <sensor type="camera" name="camera2">
            <update_rate>15.0</update_rate>
            <camera>
                <pose>0 0 0.02 0 0.20 0</pose>
                <horizontal_fov>0.95417536656506718</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.01</near>
                    <far>50.0</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </camera>
            <plugin name="color" filename="libgazebo_ros_camera.so">
                <ros>
                    <namespace>/sensors/camera</namespace>
                    <remapping>color/image_raw:=color/image_rect_color</remapping>
                </ros>
                <always_on>true</always_on>
                <update_rate>15.0</update_rate>
                <camera_name>color</camera_name>
                <frame_name>$(arg tf_prefix)camera_color_optical_frame</frame_name>
                <hack_baseline>0.0193</hack_baseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="$(arg tf_prefix)laser">
        <sensor type="ray" name="rp_lidar_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.15</min>
                    <max>8.0</max>
                    <resolution>0.05</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="rplidar" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <remapping>~/out:=sensors/rplidar/scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>$(arg tf_prefix)laser</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="$(arg tf_prefix)support_r">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="$(arg tf_prefix)support_l">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="$(arg tf_prefix)nuc">
        <material>Gazebo/Black</material>
    </gazebo>
</robot>

