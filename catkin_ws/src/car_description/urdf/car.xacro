<?xml version="1.0"?>
<robot name="$(arg car_name)" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:include filename="$(find car_description)/urdf/_d435.urdf.xacro"/>
  <xacro:include filename="$(find car_description)/urdf/rplidar_a2.xacro"/>
  <xacro:include filename="$(find car_description)/urdf/common.xacro"/>
  <xacro:arg name="tf_prefix" default=""/>
  <xacro:arg name="agent_prefix" default=""/>

  <material name="black">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>

  <material name="plastic">
    <color rgba="1 1 1 0.25"/>
  </material>

  <material name="imu">
    <color rgba="0.2 0.5 0.1 1"/>
  </material>

  <material name="grey">
    <color rgba="0.75 0.75 0.75 1"/>
  </material>

  <material name="white">
    <color rgba="0.95 0.95 0.95 1"/>
  </material>		
  
  <link name="$(arg tf_prefix)base_link">
    <visual>
      <origin rpy="0.0 0 0" xyz="0.135 0 0.01"/>
      <geometry>
        <mesh filename="file://$(find car_description)/meshes/chasi.dae"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0.0 0 0" xyz="0.135 0 0.01"/>
      <geometry>
        <mesh filename="file://$(find car_description)/meshes/chasi.dae"/>
      </geometry>
    </collision>
  </link>

  <link name="$(arg tf_prefix)board">
    <visual>
      <origin rpy="0.0 0 0" xyz="0.115 0 0"/>
      <geometry>
        <mesh filename="file://$(find car_description)/meshes/board.dae"/>
      </geometry>
      <material name="plastic"/>
    </visual>
    <collision>
      <origin rpy="0.0 0 0" xyz="0.115 0 0"/>
      <geometry>
        <mesh filename="file://$(find car_description)/meshes/board.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0 0" xyz="0.115 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.00213542" ixy="0.0" ixz="0.0" iyy="0.01235417" iyz="0.0" izz="0.01448542"/>
    </inertial>
  </link>

  <link name="$(arg tf_prefix)camera_board">
    <visual>
      <origin rpy="0.0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find car_description)/meshes/camera_board.dae"/>
      </geometry>
      <material name="plastic"/>
    </visual>
    <collision>
      <origin rpy="0.0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find car_description)/meshes/camera_board.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00014165" ixy="0.0" ixz="0.0" iyy="0.00006758" iyz="0.0" izz="0.00020865"/>
    </inertial>
  </link>

  <xacro:macro name="wheel" params="name">
    <link name="${name}">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find car_description)/meshes/wheel.dae"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
        <geometry>
          <cylinder length="0.025" radius="0.0325" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_with_origin radius="0.025" length="0.0325" mass="0.05" >
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
      </xacro:cylinder_inertial_with_origin>
    </link>
  </xacro:macro>

  <xacro:wheel name="$(arg tf_prefix)wheel_fr"/>
  <xacro:wheel name="$(arg tf_prefix)wheel_fl"/>
  <xacro:wheel name="$(arg tf_prefix)wheel_br"/>
  <xacro:wheel name="$(arg tf_prefix)wheel_bl"/>

  <link name="$(arg tf_prefix)axis_fl">
    <visual>
      <origin rpy="0.0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00000002" ixy="0.0" ixz="0.0" iyy="0.00000002" iyz="0.0" izz="0.00000002"/>
    </inertial>
  </link>

  <link name="$(arg tf_prefix)axis_fr">
    <visual>
      <origin rpy="0.0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00000002" ixy="0.0" ixz="0.0" iyy="0.00000002" iyz="0.0" izz="0.00000002"/>
    </inertial>
  </link>

  <link name="$(arg tf_prefix)imu">
    <visual>
      <geometry>
        <box size="0.066 0.064 0.01"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/> 
      <material name="imu"/>     
    </visual>
    <collision>
      <geometry>
        <box size="0.066 0.064 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.00006993" ixy="0.0" ixz="0.0" iyy="0.00007427" iyz="0.0" izz="0.00014087"/>
    </inertial>
  </link>

  <link name="$(arg tf_prefix)marker">
    <visual>
      <geometry>
        <mesh filename="file://$(find car_description)/meshes/marker.dae"/>
      </geometry>
      <origin rpy="0 0 1.5708" xyz="0 0 0"/>
          
    </visual>
    <collision>
      <geometry>
        <box size="0.03 0.03 0.000001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.00000008" ixy="0.0" ixz="0.0" iyy="0.00000008" iyz="0.0" izz="0.00000015"/>
    </inertial>
  </link>

  <link name="$(arg tf_prefix)support_l">
    <visual>
      <geometry>
        <cylinder length="0.22" radius="0.004"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>      
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.22" radius="0.004"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.00000404" ixy="0.0" ixz="0.0" iyy="0.00000404" iyz="0.0" izz="0.00000001"/>
    </inertial>
  </link>

  <link name="$(arg tf_prefix)support_r">
    <visual>
      <geometry>
        <cylinder length="0.22" radius="0.004"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>      
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.22" radius="0.004"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.00000404" ixy="0.0" ixz="0.0" iyy="0.00000404" iyz="0.0" izz="0.00000001"/>
    </inertial>
  </link>

  <!-- BNO055 -->
  <link name="$(arg tf_prefix)bno055">
  </link>

  <link name="$(arg tf_prefix)nuc">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.022"/>
      <geometry>
        <box size="0.11 0.11 0.04" />
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.022"/>
      <geometry>
        <box size="0.11 0.11 0.04" />
      </geometry>
    </collision>

    <xacro:box_inertial_with_origin x="0.11" y="0.11" z="0.04" mass="0.7" >
      <origin xyz="0 0 0.025" rpy="0 0 0" />
    </xacro:box_inertial_with_origin>
  </link>


  <!-- front camera -->
  <xacro:property name="front_camera_name" value="camera"/>

  <xacro:sensor_d435 parent="$(arg tf_prefix)camera_board" sensor_name="$(arg tf_prefix)camera">
    <origin xyz="0.03 0 0.025" rpy="0 0.2 0"/>
  </xacro:sensor_d435>

  <xacro:sensor_d435 parent="$(arg tf_prefix)camera_board" sensor_name="rear_camera">
    <origin xyz="-0.02 0 0.025" rpy="0 0.2 3.141"/>
  </xacro:sensor_d435>

  <xacro:sensor_rplidar_a2 parent="$(arg tf_prefix)board" prefix="lidar" tf_prefix="$(arg tf_prefix)">
    <origin xyz="0.14 0 0.0425" rpy="0 0 0"/>
  </xacro:sensor_rplidar_a2>

  <joint name="$(arg tf_prefix)joint_board_to_bno055" type="fixed">
      <parent link="$(arg tf_prefix)board"/>
      <child link="$(arg tf_prefix)bno055"/>
      <origin xyz="0.235 0.0 0.023" rpy="0 0 1.5708"/>
  </joint>

  <joint name="$(arg tf_prefix)base_link_board" type="fixed">
    <parent link="$(arg tf_prefix)base_link"/>
    <child link="$(arg tf_prefix)board"/>
    <origin xyz="0 0 0.07"/>
  </joint>

  <joint name="$(arg tf_prefix)board_cameraboard" type="fixed">
    <parent link="$(arg tf_prefix)board"/>
    <child link="$(arg tf_prefix)camera_board"/>
    <origin xyz="-0.025 0 0.15"/>
  </joint>

  <joint name="$(arg tf_prefix)board_imu" type="fixed">
    <parent link="$(arg tf_prefix)board"/>
    <child link="$(arg tf_prefix)imu"/>
    <origin xyz="0.07 -0.017 0"/>
  </joint>

  <joint name="$(arg tf_prefix)board_marker" type="fixed">
    <parent link="$(arg tf_prefix)board"/>
    <child link="$(arg tf_prefix)marker"/>
    <origin xyz="0.30 0.0 0.0025"/>
  </joint>

  <joint name="$(arg tf_prefix)board_nuc" type="fixed">
    <parent link="$(arg tf_prefix)board"/>
    <child link="$(arg tf_prefix)nuc"/>
    <origin xyz="0.16 0 0"/>
  </joint>

  <joint name="$(arg tf_prefix)frontwheel_steering_left" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="-0.55" upper="0.55" velocity="2"/>
    <parent link="$(arg tf_prefix)base_link"/>
    <child link="$(arg tf_prefix)axis_fl"/>
    <origin xyz="0.255 0.08 0.03"/>
  </joint>

  <joint name="$(arg tf_prefix)frontwheel_steering_right" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="-0.55" upper="0.55" velocity="2"/>
    <parent link="$(arg tf_prefix)base_link"/>
    <child link="$(arg tf_prefix)axis_fr"/>
    <origin xyz="0.255 -0.08 0.03"/>
  </joint>

  <joint name="$(arg tf_prefix)frontwheel_left" type="revolute">
    <axis xyz="0 1 0"/>
    <anchor xyz="0 0 0"/>
    <parent link="$(arg tf_prefix)axis_fl"/>
    <child link="$(arg tf_prefix)wheel_fl"/>
    <origin xyz="0 0 0"/>
    <limit effort="0.1" lower="-1000000000000.0" upper="1000000000000.0" velocity="124"/>
  </joint>

  <joint name="$(arg tf_prefix)frontwheel_right" type="revolute">
    <axis xyz="0 1 0"/>
    <parent link="$(arg tf_prefix)axis_fr"/>
    <child link="$(arg tf_prefix)wheel_fr"/>
    <origin xyz="0 0 0"/>
    <limit effort="0.1" lower="-1000000000000.0" upper="1000000000000.0" velocity="124"/>
  </joint>

   <joint name="$(arg tf_prefix)rearwheel_left" type="revolute">
    <axis xyz="0 1 0"/>
    <parent link="$(arg tf_prefix)base_link"/>
    <child link="$(arg tf_prefix)wheel_bl"/>
    <origin xyz="0 0.085 0.03"/>
    <limit effort="0.1" lower="-1000000000000.0" upper="1000000000000.0" velocity="124"/>
   </joint>

  <joint name="$(arg tf_prefix)rearwheel_right" type="revolute">
    <axis xyz="0 1 0"/>
    <parent link="$(arg tf_prefix)base_link"/>
    <child link="$(arg tf_prefix)wheel_br"/>
    <origin xyz="0 -0.085 0.03"/>
    <limit effort="0.1" lower="-1000000000000.0" upper="1000000000000.0" velocity="124"/>
  </joint>

  <joint name="$(arg tf_prefix)board_support_l" type="fixed">
    <parent link="$(arg tf_prefix)board"/>
    <child link="$(arg tf_prefix)support_l"/>
    <origin xyz="-0.024000 0.053000 0.112000"/>
  </joint>

  <joint name="$(arg tf_prefix)board_support_r" type="fixed">
    <parent link="$(arg tf_prefix)board"/>
    <child link="$(arg tf_prefix)support_r"/>
    <origin xyz="-0.024000 -0.053000 0.112000"/>
  </joint>

  <transmission name="$(arg tf_prefix)steering_front_left_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="$(arg tf_prefix)frontwheel_steering_left">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="$(arg tf_prefix)front_left_steering_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="$(arg tf_prefix)steering_front_right_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="$(arg tf_prefix)frontwheel_steering_right">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_steering_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="$(arg tf_prefix)tran_front_left_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="$(arg tf_prefix)frontwheel_left">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="$(arg tf_prefix)front_left_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="$(arg tf_prefix)tran_front_right_wheel">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="$(arg tf_prefix)frontwheel_right">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="$(arg tf_prefix)front_right_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="$(arg tf_prefix)tran_rear_left">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="$(arg tf_prefix)rearwheel_left">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="$(arg tf_prefix)rear_left_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="$(arg tf_prefix)tran_rear_right">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="$(arg tf_prefix)rearwheel_right">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="$(arg tf_prefix)rear_right_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <gazebo reference="$(arg tf_prefix)rearwheel_left">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)rearwheel_right">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)frontwheel_right">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)frontwheel_left">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)frontwheel_steering_right">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)frontwheel_steering_left">
    <implicitSpringDamper>true</implicitSpringDamper>
  </gazebo>

  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>$(arg agent_prefix)/model_car</robotNamespace>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="model_car_ground_truth" filename="libgazebo_ros_p3d.so">
      <ros>
        <namespace>p3d</namespace>
        <remapping>odom:=/simulation/odom_ground_truth</remapping>
      </ros>
      <frame_name>map</frame_name>
      <body_name>$(arg tf_prefix)base_link</body_name>
      <update_rate>30.0</update_rate>
    </plugin>
  </gazebo>

   <gazebo reference="$(arg tf_prefix)imu">
    <sensor name="$(arg tf_prefix)imu" type="imu">
     <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <namespace>sensors</namespace>
          <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>


  <gazebo reference="$(arg tf_prefix)camera_depth_frame">
    <sensor type="depth" name="camera1">       
      <always_on>1</always_on>
      <visualize>true</visualize>
      <update_rate>15.0</update_rate>
      <camera>
        <pose>0 0 0 0 0.20 0</pose>
        <horizontal_fov>1.3900031938640904</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L8</format>
        </image>
        <depth_camera>
        </depth_camera>
        <clip>
          <near>0.01</near>
          <far>50.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <ros>
              <remapping>camera1/image_raw:=infra1/image_rect_raw</remapping>
              <remapping>camera1/depth/image_raw:=depth/image_rect_raw</remapping>
              <remapping>camera1/camera_info:=infra1/camera_info</remapping>
              <remapping>camera1/depth/camera_info:=depth/camera_info</remapping>
              <remapping>camera1/points:=depth/points</remapping>
          </ros>

        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <camera_name>sensors/camera</camera_name>
        <frame_name>$(arg tf_prefix)camera_depth_optical_frame</frame_name>

        <pointCloudCutoff>0.05</pointCloudCutoff>
        <pointCloudCutoffMax>15.0</pointCloudCutoffMax>
        <hack_baseline>0.007</hack_baseline>
        <CxPrime>322.3056945800781</CxPrime>
        <Cx>322.3056945800781</Cx>
        <Cy>241.67051696777344</Cy>
        <focal_length>383.795710</focal_length>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="$(arg tf_prefix)camera_color_frame">
    <sensor type="camera" name="camera2">
      <update_rate>15.0</update_rate>
      <camera>
        <pose>0 0 0.02 0 0.20 0</pose>
        <horizontal_fov>0.95417536656506718</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.01</near>
          <far>50.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller2" filename="libgazebo_ros_camera.so">
          <ros>
              <!-- <namespace>stereo</namespace> -->
              <remapping>camera2/image_raw:=image_rect_color</remapping>
              <remapping>camera2/camera_info:=camera_info</remapping>
          </ros>
        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <camera_name>sensors/camera/color</camera_name>
        <frame_name>$(arg tf_prefix)camera_color_optical_frame</frame_name>
        <hack_baseline>0.0193</hack_baseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="$(arg tf_prefix)laser">
    <sensor type="ray" name="rp_lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>8.0</max>
          <resolution>0.05</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="rplidar" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=sensors/rplidar/scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>$(arg tf_prefix)laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)wheel_fl">
    <mu1>1.34</mu1>
    <mu2>1.34</mu2>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)wheel_fr">
    <mu1>1.34</mu1>
    <mu2>1.34</mu2>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)wheel_br">
    <mu1>1.34</mu1>
    <mu2>1.34</mu2>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)wheel_bl">
    <mu1>1.34</mu1>
    <mu2>1.34</mu2>
  </gazebo>

  <gazebo reference="$(arg tf_prefix)support_r">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="$(arg tf_prefix)support_l">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="$(arg tf_prefix)nuc">
    <material>Gazebo/Black</material>
  </gazebo>
</robot>

